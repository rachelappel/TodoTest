@page "/ToDoList"
@using System.Text.Json
@inject IHttpClientFactory ClientFactory
<h3>ToDoList</h3>
Hello

@{
    <ul>
        @foreach (var t in ToDos)
        {
            <li>@t.Title</li>
        }
    </ul>
}

@code {
    private IEnumerable<ToDo> ToDos = Array.Empty<ToDo>();
    private bool toDoErr;
    private bool shouldRender;
    private HttpClient Http;
    
    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get, "https://localhost:7196/api/ToDos");
        request.Headers.Add("Accept", "application/json");
        request.Headers.Add("User-Agent", "ToDoList");
        
        var client = ClientFactory.CreateClient();
        var response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            await using var responseStream = await response.Content.ReadAsStreamAsync();
            
            ToDos = await response.Content.ReadFromJsonAsync<IEnumerable<ToDo>>();
            
            /* also works
             ToDos = await JsonSerializer.DeserializeAsync<IEnumerable<ToDo>>(
                responseStream,
                new JsonSerializerOptions
                {
                    PropertyNamingPolicy = JsonNamingPolicy.CamelCase
                });*/
        }
        else
        {
            toDoErr = true;
        }
        shouldRender = true;
    }

    public string? HttpClient { get; set; }


    public class ToDo
    {
        public int Id { get; set; }
        public string? Title { get; set; }
        public bool Complete { get; set; }
        public string? Due { get; set; }
    }

}